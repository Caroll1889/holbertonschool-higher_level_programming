``matrix`` module
======================

Using ``matrix_divided``
----------------------
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

# A matrix empty

>>> matrix_divided([], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


---------------------------------------------------------------------------

# A matrix with a string

>>>  matrix_divided matrix([['a', 2, 3],[4, 5, 6]], 3)
 Traceback (most recent call last):
 TypeError: matrix must be a matrix of integers/floats


---------------------------------------------------------------------------

# div equal to 0

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by 0 


---------------------------------------------------------------------------

# Matrix os strings

>>> matrix_divided([“hi”, “hello”], 3)
Traceback (most recent call last)
TypeError: matrix must be a matrix (list of lists) of integers/floats


---------------------------------------------------------------------------

# division

>>> matrix_divided([[1,2,3]], 3)
[[0.33, 0.67, 1.0]]


---------------------------------------------------------------------------

# division

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0,67, 1.0], [1.33, 1.67, 2.0]]


--------------------------------------------------------------------------

# empty lists inside of the matrix  

>>> matrix_divided([[]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

--------------------------------------------------------------------------

>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size


--------------------------------------------------------------------------
